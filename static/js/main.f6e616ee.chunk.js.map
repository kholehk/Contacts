{"version":3,"sources":["form/SearchForm.js","Header.js","utils/api.js","form/Input.js","form/ContactForm.js","table/ContactsTable.js","form/ConfirmDelete.js","Main.js","Footer.js","App.js","index.js"],"names":["SearchForm","props","fields","className","aria-label","map","field","name","key","label","type","placeholder","Header","container","setCurrentContact","href","onClick","data-bs-toggle","data-bs-target","crudAPI","origin","pathname","this","_origin","value","_pathname","data","a","axios","post","response","console","log","params","get","put","id","error","delete","status","Input","contact","handleInputChange","htmlFor","onChange","event","aria-describedby","ContactForm","title","currentContact","submitContact","initContact","useCallback","obj","reduce","acc","cur","useState","setContact","target","useEffect","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","calculate","formTarget","preventDefault","createAt","Date","now","TableBody","contacts","TableRow","idx","Function","scope","ContactsTable","length","colSpan","ConfirmDelete","deleteContact","surname","contactsAPI","Main","currentPage","setCurrentPage","setContacts","newContact","create","createdContact","read","contactsFromAPI","receivedContact","update","updatedContact","wasteContact","filter","readContacts","isNewContact","Object","keys","Footer","aria-disabled","stamp","App","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"oLA+BeA,MA7Bf,SAAoBC,GAAQ,IAClBC,EAAWD,EAAXC,OAER,OACE,uBAAMC,UAAU,SAAhB,UACE,wBACEA,UAAU,cACVC,aAAW,mBAFb,SAIGF,EAAOG,KAAI,SAAAC,GAAK,OACf,wBAAwBC,KAAMD,EAAME,IAApC,SACGF,EAAMG,OADIH,EAAME,UAKvB,uBACEL,UAAU,oBACVO,KAAK,SACLC,YAAY,SACZP,aAAW,WAEb,wBACED,UAAU,0BACVO,KAAK,SAFP,wBCESE,MAtBf,SAAgBX,GAAQ,IACdY,EAAyCZ,EAAzCY,UAAWX,EAA8BD,EAA9BC,OAAQY,EAAsBb,EAAtBa,kBAE3B,OACE,wBAAQX,UAAWU,EAAnB,SACE,qBAAKV,UAAU,+BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeY,KAAK,KAAjC,sBACA,cAAC,EAAD,CAAYb,OAAQA,IACpB,wBACEC,UAAU,kBACVO,KAAK,SACLM,QAAS,kBAAMF,EAAkB,KACjCG,iBAAe,QACfC,iBAAe,eALjB,iC,+DC0DKC,E,WAnEb,WAAYC,GAAwB,IAAhBC,EAAe,uDAAJ,GAAI,oBACjCC,KAAKF,OAASA,EACdE,KAAKD,SAAWA,E,wCAOlB,WACE,OAAOC,KAAKC,S,IALd,SAAWC,GACTF,KAAKC,QAAUD,KAAKC,SAAWC,I,oBAWjC,WACE,OAAOF,KAAKG,W,IALd,SAAaD,GACXF,KAAKG,UAAYH,KAAKG,WAAaD,I,gBAOrC,WACE,OAAOF,KAAKF,OAASE,KAAKD,W,2DAG5B,WAAaK,GAAb,eAAAC,EAAA,+EAE2BC,IAAMC,KAAKP,KAAKP,KAAMW,GAFjD,cAEUI,EAFV,yBAIWA,EAASJ,MAJpB,gCAMIK,QAAQC,IAAR,MANJ,yD,gHAUA,0CAAAL,EAAA,6DAAWM,EAAX,+BAAoB,GAApB,kBAE2BL,IAAMM,IAAN,UAAaZ,KAAKP,KAAlB,YAA0BkB,IAFrD,cAEUH,EAFV,yBAIWA,EAASJ,MAJpB,gCAMIK,QAAQC,IAAR,MANJ,yD,iHAWA,WAAaN,GAAb,eAAAC,EAAA,+EAE2BC,IAAMO,IAAN,UAAab,KAAKP,KAAlB,YAA0BW,EAAKU,IAAMV,GAFhE,cAEUI,EAFV,yBAIWA,EAASJ,MAJpB,gCAMIK,QAAQM,MAAR,MANJ,yD,kHAUA,WAAaD,GAAb,eAAAT,EAAA,+EAE2BC,IAAMU,OAAN,UAAgBhB,KAAKP,KAArB,YAA6BqB,IAFxD,cAEUN,EAFV,yBAIWA,EAASS,QAJpB,gCAMIR,QAAQM,MAAR,MANJ,yD,6ECnCaG,MAtBf,SAAevC,GAAQ,IACbK,EAAsCL,EAAtCK,MAAOmC,EAA+BxC,EAA/BwC,QAASC,EAAsBzC,EAAtByC,kBAExB,OACE,sBAAKvC,UAAU,OAAf,UACE,uBACEA,UAAU,aACVwC,QAASrC,EAAME,IAFjB,SAGEF,EAAMG,QACR,uBACEC,KAAMJ,EAAMI,MAAQ,OACpBP,UAAU,eACViC,GAAI9B,EAAME,IACVD,KAAMD,EAAME,IACZgB,MAAOiB,EAAQnC,EAAME,KACrBoC,SAAU,SAAAC,GAAK,OAAIH,EAAkBG,IACrCC,mBAAkBxC,EAAMG,YCiEjBsC,MAhFf,SAAqB9C,GAAQ,IACnB+C,EAAiD/C,EAAjD+C,MAAO9C,EAA0CD,EAA1CC,OAAQ+C,EAAkChD,EAAlCgD,eAAgBC,EAAkBjD,EAAlBiD,cACjCC,EAAcC,uBAClB,SAACC,GAAD,OAASnD,EAAOoD,QAAO,SAACC,EAAKC,GAE3B,OADAD,EAAIC,EAAIhD,KAAO6C,EAAIG,EAAIhD,MAAQ,GACxB+C,IACN,CAAEnB,GAAIa,EAAeb,IAAM,SAC9B,CAACa,EAAgB/C,IAPO,EASIuD,mBAASN,EAAYF,IATzB,mBASnBR,EATmB,KASViB,EATU,KAa1B,SAAShB,EAAkBG,GAAQ,IAAD,EACRA,EAAMc,OAAtBpD,EADwB,EACxBA,KAAMiB,EADkB,EAClBA,MAEdkC,EAAW,2BAAKjB,GAAN,kBAAgBlC,EAAOiB,KAGnC,OARAoC,qBAAU,kBAAMF,EAAWP,EAAYF,MAAkB,CAACA,EAAgBE,IASxE,qBACEhD,UAAU,aACViC,GAAG,cACHyB,SAAS,KACTC,kBAAgB,mBAChBC,cAAY,OALd,SAOE,sBACE3B,GAAG,oBACHjC,UAAU,eAFZ,SAIE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBACEA,UAAU,cACViC,GAAG,mBAFL,SAGEY,IACF,wBACEtC,KAAK,SACLP,UAAU,YACV6D,kBAAgB,QAChB5D,aAAW,aAGf,qBAAKD,UAAU,aAAf,SACGD,EAAOG,KAAI,SAAAC,GACV,OAAIA,EAAM2D,UAAkB,GAE1B,cAAC,EAAD,CAEE3D,MAAOA,EACPmC,QAASA,EACTC,kBAAmBA,GAHdpC,EAAME,UAQnB,sBAAKL,UAAU,eAAf,UACE,wBACEO,KAAK,SACLP,UAAU,oBACV6D,kBAAgB,QAHlB,mBAKA,wBACEE,WAAW,oBACXxD,KAAK,SACLP,UAAU,kBACV6D,kBAAgB,QAChBhD,QAAO,uCAAE,WAAO6B,GAAP,SAAAlB,EAAA,6DACPkB,EAAMsB,iBADC,SAEDjB,EAAc,2BAAKT,GAAN,IAAe2B,SAAUC,KAAKC,SAF1C,2CAAF,sDALT,SASEtB,eC/Cd,SAASuB,EAAUtE,GAAQ,IACjBC,EAAwCD,EAAxCC,OAAQsE,EAAgCvE,EAAhCuE,SAAU1D,EAAsBb,EAAtBa,kBAE1B,OACE0D,EAASnE,KAAI,SAAAoC,GAAO,OAClB,6BACE,cAACgC,EAAD,CACEvE,OAAQA,EACRuC,QAASA,EACT3B,kBAAmBA,KAJd2B,EAAQL,OAWvB,SAASqC,EAASxE,GAAQ,IAChBC,EAAuCD,EAAvCC,OAAQuC,EAA+BxC,EAA/BwC,QAAS3B,EAAsBb,EAAtBa,kBAEzB,OACEZ,EAAOG,KAAI,SAACC,EAAOoE,GACjB,OAAIA,EACF,6BACEpE,EAAM2D,WAAa3D,EAAM2D,qBAAqBU,SAC1CrE,EAAM2D,UAAUxB,EAAQnC,EAAME,MAC9BiC,EAAQnC,EAAME,MAHXF,EAAME,KAOf,qBAAqBoE,MAAM,MAA3B,UACE,wBAAQzE,UAAU,MAAlB,SAAyBsC,EAAQnC,EAAME,OACvC,sBACEL,UAAU,kBACVa,QAAS,kBAAMF,EAAkB2B,IAFnC,UAIE,wBACE/B,KAAK,SACLO,iBAAe,QACfC,iBAAe,eACff,UAAU,kCAJZ,kBAMA,wBACEO,KAAK,SACLO,iBAAe,QACfC,iBAAe,iBACff,UAAU,sCAJZ,yBAZMG,EAAME,QAyBTqE,MAhFf,SAAuB5E,GAAQ,IACrBC,EAAwCD,EAAxCC,OAAQsE,EAAgCvE,EAAhCuE,SAAU1D,EAAsBb,EAAtBa,kBAE1B,OACE,wBAAOX,UAAU,QAAjB,UACE,gCACE,6BACGD,EAAOG,KACN,SAAAC,GAAK,OAAI,oBAAoBsE,MAAM,MAA1B,SAAiCtE,EAAMG,OAA9BH,EAAME,YAI9B,gCACGgE,EAASM,OAAS,EACf,cAACP,EAAD,CACArE,OAAQA,EACRsE,SAAUA,EACV1D,kBAAmBA,IAEnB,6BAAI,oBAAIiE,QAAQ,IAAZ,iCC4BDC,MA/Cf,SAAuB/E,GAAQ,IACrBwC,EAA2BxC,EAA3BwC,QAASwC,EAAkBhF,EAAlBgF,cAEjB,OACE,qBACE9E,UAAU,aACViC,GAAG,gBACHyB,SAAS,KACTC,kBAAgB,qBAChBC,cAAY,OALd,SAOE,qBAAK5D,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBACEA,UAAU,cACViC,GAAG,qBAFL,UAGEK,EAAQlC,KAHV,IAGiBkC,EAAQyC,WACzB,wBACExE,KAAK,SACLP,UAAU,YACV6D,kBAAgB,QAChB5D,aAAW,aAGf,qBAAKD,UAAU,aAAf,qCAGA,sBAAKA,UAAU,eAAf,UACE,wBACEO,KAAK,SACLP,UAAU,oBACV6D,kBAAgB,QAHlB,mBAKA,wBACEtD,KAAK,SACLP,UAAU,kBACV6D,kBAAgB,QAChBhD,QAAO,sBAAE,sBAAAW,EAAA,sEAAoBsD,EAAcxC,GAAlC,2CAJX,+BC1BN0C,EAAc,IAAIhE,EAHN,sCACE,2BAsELiE,MAlEf,SAAcnF,GAAQ,IAElBY,EAMEZ,EANFY,UACAX,EAKED,EALFC,OAGA+C,GAEEhD,EAJFoF,YAIEpF,EAHFqF,eAGErF,EAFFgD,gBACAnC,EACEb,EADFa,kBAPiB,EAUa2C,mBAAS,IAVtB,mBAUZe,EAVY,KAUFe,EAVE,iDAcnB,WAA6BC,GAA7B,eAAA7D,EAAA,sEAC+BwD,EAAYM,OAAOD,GADlD,OACQE,EADR,OAGEH,EAAY,GAAD,mBAAKf,GAAL,CAAekB,KAH5B,4CAdmB,kEAoBnB,4BAAA/D,EAAA,sEACgCwD,EAAYQ,OAD5C,OACQC,EADR,OAGEL,EAAYK,GAHd,4CApBmB,kEA0BnB,WAA8BC,GAA9B,eAAAlE,EAAA,sEAC+BwD,EAAYW,OAAOD,GADlD,OACQE,EADR,OAGER,EACEf,EACGnE,KAAI,SAAAoC,GAAO,OAAKA,EAAQL,KAAO2D,EAAe3D,GAC3C2D,EAAiBtD,MAN3B,4CA1BmB,kEAoCnB,WAA6BuD,GAA7B,eAAArE,EAAA,6DACUS,EAAO4D,EAAP5D,GADV,SAGQ+C,EAAY7C,OAAOF,GAH3B,OAKEmD,EAAYf,EAASyB,QAAO,SAAAxD,GAAO,OAAIA,EAAQL,KAAOA,MALxD,4CApCmB,sBAYnBwB,qBAAU,kBAZS,0CAYHsC,KAAgB,IAgChC,IAAMC,EAAe,SAAC1D,GAAD,OAAe2D,OAAOC,KAAK5D,GAASqC,QAEzD,OACE,uBAAM3E,UAAWU,EAAjB,UACE,cAAC,EAAD,CACEmC,MAAOmD,EAAalD,GAAkB,cAAgB,eACtD/C,OAAQA,EACR+C,eAAgBA,EAChBC,cAAeiD,EAAalD,GApDf,0FAsDf,cAAC,EAAD,CACE/C,OAAQA,EACRsE,SAAUA,EACV1D,kBAAmBA,IAErB,cAAC,EAAD,CACE2B,QAASQ,EACTgC,cA7Da,kDCiBNqB,MA3Bf,SAAgBrG,GAAQ,IACdY,EAA2BZ,EAA3BY,UAAWwE,EAAgBpF,EAAhBoF,YAEnB,OACE,wBAAQlF,UAAWU,EAAnB,SACE,qBAAKT,aAAW,2BAAhB,SACE,qBAAID,UAAU,oCAAd,UACE,oBAAIA,UAAU,qBAAd,SACE,mBACEA,UAAU,YACVY,KAAI,kBAAasE,EAAc,GAC/BxB,SAAS,KACT0C,gBAAc,OAJhB,wBAOF,oBAAIpG,UAAU,YAAd,SACE,mBACEA,UAAU,YACVY,KAAI,kBAAasE,EAAc,GAFjC,4BCZNxE,EAAY,YAEZX,EAAS,CACb,CAAEM,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,UAAWC,MAAO,WACzB,CAAED,IAAK,WAAYC,MAAO,WAAYC,KAAM,QAC5C,CAAEF,IAAK,QAASC,MAAO,QAASC,KAAM,OACtC,CAAEF,IAAK,QAASC,MAAO,QAASC,KAAM,SACtC,CACEF,IAAK,WAAYC,MAAO,gBAAiBC,KAAM,iBAC/CuD,UAAW,SAACuC,GAAD,OAAWA,KAgCXC,MA5Bf,WAAgB,IAAD,EACyBhD,mBAAS,GADlC,mBACN4B,EADM,KACOC,EADP,OAE+B7B,mBAAS,IAFxC,mBAENR,EAFM,KAEUnC,EAFV,KAIb,OACE,eAAC,IAAM4F,WAAP,WACE,cAAC,EAAD,CACE7F,UAAWA,EACXX,OAAQA,EACRY,kBAAmBA,IAErB,cAAC,EAAD,CACED,UAAWA,EACXX,OAAQA,EACRmF,YAAaA,EACbC,eAAgBA,EAChBrC,eAAgBA,EAChBnC,kBAAmBA,IAErB,cAAC,EAAD,CACED,UAAWA,EACXwE,YAAaA,EACbC,eAAgBA,Q,MCpCxBqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6e616ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SearchForm(props) {\r\n  const { fields } = props;\r\n\r\n  return (\r\n    <form className=\"d-flex\">\r\n      <select\r\n        className=\"form-select\"\r\n        aria-label=\"Users properties\"\r\n      >\r\n        {fields.map(field => (\r\n          <option key={field.key} name={field.key} >\r\n            {field.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        className=\"form-control me-2\"\r\n        type=\"search\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n      />\r\n      <button\r\n        className=\"btn btn-outline-success\"\r\n        type=\"submit\"\r\n      >Search</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport SearchForm from './form/SearchForm';\r\n\r\nfunction Header(props) {\r\n  const { container, fields, setCurrentContact } = props;\r\n\r\n  return (\r\n    <header className={container}>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"./\">Contacts</a>\r\n          <SearchForm fields={fields} />\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={() => setCurrentContact({})}\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#contactForm\"\r\n          >New contact</button>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nclass crudAPI {\r\n  constructor(origin, pathname = '') {\r\n    this.origin = origin;\r\n    this.pathname = pathname;\r\n  }\r\n\r\n  set origin(value) {\r\n    this._origin = this._origin || value;\r\n  }\r\n\r\n  get origin() {\r\n    return this._origin;\r\n  }\r\n\r\n  set pathname(value) {\r\n    this._pathname = this._pathname || value;\r\n  }\r\n\r\n  get pathname() {\r\n    return this._pathname;\r\n  }\r\n\r\n  get href() {\r\n    return this.origin + this.pathname;\r\n  }\r\n\r\n  async create(data) {\r\n    try {\r\n      const response = await axios.post(this.href, data);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async read(params = '') {\r\n    try {\r\n      const response = await axios.get(`${this.href}/${params}`);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  async update(data) {\r\n    try {\r\n      const response = await axios.put(`${this.href}/${data.id}`, data);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async delete(id) {\r\n    try {\r\n      const response = await axios.delete(`${this.href}/${id}`);\r\n\r\n      return response.status;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default crudAPI;\r\n","import React from 'react';\r\n\r\nfunction Input(props) {\r\n  const { field, contact, handleInputChange } = props;\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label\r\n        className=\"form-label\"\r\n        htmlFor={field.key}\r\n      >{field.label}</label>\r\n      <input\r\n        type={field.type || \"text\"}\r\n        className=\"form-control\"\r\n        id={field.key}\r\n        name={field.key}\r\n        value={contact[field.key]}\r\n        onChange={event => handleInputChange(event)}\r\n        aria-describedby={field.label}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport Input from './Input';\r\n\r\nfunction ContactForm(props) {\r\n  const { title, fields, currentContact, submitContact } = props;\r\n  const initContact = useCallback(\r\n    (obj) => fields.reduce((acc, cur) => {\r\n      acc[cur.key] = obj[cur.key] || '';\r\n      return acc;\r\n    }, { id: currentContact.id || null }),\r\n    [currentContact, fields]\r\n  );\r\n  const [contact, setContact] = useState(initContact(currentContact));\r\n\r\n  useEffect(() => setContact(initContact(currentContact)), [currentContact, initContact]);\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setContact({ ...contact, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"contactForm\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"contactFormLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <form\r\n        id=\"contactFormDialog\"\r\n        className=\"modal-dialog\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5\r\n              className=\"modal-title\"\r\n              id=\"contactFormLabel\"\r\n            >{title}</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {fields.map(field => {\r\n              if (field.calculate) return \"\";\r\n              return (\r\n                <Input\r\n                  key={field.key}\r\n                  field={field}\r\n                  contact={contact}\r\n                  handleInputChange={handleInputChange}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-bs-dismiss=\"modal\"\r\n            >Close</button>\r\n            <button\r\n              formTarget=\"contactFormDialog\"\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={async (event) => {\r\n                event.preventDefault();\r\n                await submitContact({ ...contact, createAt: Date.now() });\r\n              }}\r\n            >{title}</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nfunction ContactsTable(props) {\r\n  const { fields, contacts, setCurrentContact } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          {fields.map(\r\n            field => <th key={field.key} scope=\"col\">{field.label}</th>\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {contacts.length > 0\r\n          ? <TableBody\r\n            fields={fields}\r\n            contacts={contacts}\r\n            setCurrentContact={setCurrentContact}\r\n          />\r\n          : <tr><td colSpan=\"7\">No Contacts</td></tr>\r\n        }\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction TableBody(props) {\r\n  const { fields, contacts, setCurrentContact } = props;\r\n\r\n  return (\r\n    contacts.map(contact => (\r\n      <tr key={contact.id}>\r\n        <TableRow\r\n          fields={fields}\r\n          contact={contact}\r\n          setCurrentContact={setCurrentContact}\r\n        />\r\n      </tr>)\r\n    )\r\n  );\r\n}\r\n\r\nfunction TableRow(props) {\r\n  const { fields, contact, setCurrentContact } = props;\r\n\r\n  return (\r\n    fields.map((field, idx) => {\r\n      if (idx) return (\r\n        <td key={field.key}>{\r\n          field.calculate && field.calculate instanceof Function\r\n            ? field.calculate(contact[field.key])\r\n            : contact[field.key]\r\n        }</td>\r\n      )\r\n      return (\r\n        < th key={field.key} scope=\"row\" >\r\n          <strong className=\"row\">{contact[field.key]}</strong>\r\n          <div\r\n            className=\"row flex-nowrap\"\r\n            onClick={() => setCurrentContact(contact)}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#contactForm\"\r\n              className=\"btn btn-sm btn-primary col-auto\"\r\n            >Edit</button>\r\n            <button\r\n              type=\"button\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#confirmDelete\"\r\n              className=\"btn btn-sm btn-danger col-auto mx-1\"\r\n            >Delete</button>\r\n          </div>\r\n        </th>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nexport default ContactsTable;\r\n","import React from 'react';\r\n\r\nfunction ConfirmDelete(props) {\r\n  const { contact, deleteContact } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"confirmDelete\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"confirmDeleteLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5\r\n              className=\"modal-title\"\r\n              id=\"confirmDeleteLabel\"\r\n            >{contact.name} {contact.surname}</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            Are you sure to delete?\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-bs-dismiss=\"modal\"\r\n            >Close</button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={async () => { await deleteContact(contact) }}\r\n            >Remove</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmDelete;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport crudAPI from './utils/api';\r\nimport ContactForm from './form/ContactForm';\r\nimport ContactsTable from './table/ContactsTable';\r\nimport ConfirmDelete from './form/ConfirmDelete';\r\n\r\nconst originAPI = 'https://my-json-server.typicode.com';\r\nconst pathnameAPI = '/kholehk/Contacts/index';\r\n\r\nconst contactsAPI = new crudAPI(originAPI, pathnameAPI);\r\n\r\nfunction Main(props) {\r\n  const {\r\n    container,\r\n    fields,\r\n    currentPage,\r\n    setCurrentPage,\r\n    currentContact,\r\n    setCurrentContact,\r\n  } = props;\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  useEffect(() => readContacts(), []);\r\n\r\n  async function createContact(newContact) {\r\n    const createdContact = await contactsAPI.create(newContact);\r\n\r\n    setContacts([...contacts, createdContact]);\r\n  }\r\n\r\n  async function readContacts() {\r\n    const contactsFromAPI = await contactsAPI.read();\r\n\r\n    setContacts(contactsFromAPI);\r\n  }\r\n\r\n  async function updateContacts(receivedContact) {\r\n    const updatedContact = await contactsAPI.update(receivedContact);\r\n\r\n    setContacts(\r\n      contacts\r\n        .map(contact => (contact.id === updatedContact.id\r\n          ? updatedContact : contact))\r\n    );\r\n  }\r\n\r\n  async function deleteContact(wasteContact) {\r\n    const { id } = wasteContact;\r\n\r\n    await contactsAPI.delete(id);\r\n\r\n    setContacts(contacts.filter(contact => contact.id !== id));\r\n  }\r\n\r\n  const isNewContact = (contact) => !(Object.keys(contact).length);\r\n\r\n  return (\r\n    <main className={container}>\r\n      <ContactForm\r\n        title={isNewContact(currentContact) ? 'Add contact' : 'Edit contact'}\r\n        fields={fields}\r\n        currentContact={currentContact}\r\n        submitContact={isNewContact(currentContact) ? createContact : updateContacts}\r\n      />\r\n      <ContactsTable\r\n        fields={fields}\r\n        contacts={contacts}\r\n        setCurrentContact={setCurrentContact}\r\n      />\r\n      <ConfirmDelete\r\n        contact={currentContact}\r\n        deleteContact={deleteContact} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  const { container, currentPage } = props;\r\n\r\n  return (\r\n    <footer className={container}>\r\n      <nav aria-label=\"Pagination of users list\">\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li className=\"page-item disabled\">\r\n            <a\r\n              className=\"page-link\"\r\n              href={`./?page=${currentPage - 1}`}\r\n              tabIndex=\"-1\"\r\n              aria-disabled=\"true\"\r\n            >Previous</a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a\r\n              className=\"page-link\"\r\n              href={`./?page=${currentPage + 1}`}\r\n            >Next</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n\r\nconst container = \"container\";\r\n\r\nconst fields = [\r\n  { key: \"name\", label: \"Name\" }, //first element scope=\"row\" in table\r\n  { key: \"surname\", label: \"Surname\" },\r\n  { key: \"birthday\", label: \"Birthday\", type: \"date\" },\r\n  { key: \"phone\", label: \"Phone\", type: \"tel\" },\r\n  { key: \"email\", label: \"Email\", type: \"email\" },\r\n  {\r\n    key: \"createAt\", label: \"Create/Update\", type: \"datetime-local\",\r\n    calculate: (stamp) => stamp\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentContact, setCurrentContact] = useState({});\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Header\r\n        container={container}\r\n        fields={fields}\r\n        setCurrentContact={setCurrentContact}\r\n      />\r\n      <Main\r\n        container={container}\r\n        fields={fields}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        currentContact={currentContact}\r\n        setCurrentContact={setCurrentContact}\r\n      />\r\n      <Footer\r\n        container={container}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}